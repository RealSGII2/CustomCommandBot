@using CustomCommandBot.Shared.Models.Api
@using CustomCommandBot.Shared.Models.Discord

@inject HttpClient httpClient
@inject NavigationManager navManager
@inject IJSRuntime JavaScript

@inherits LayoutComponentBase

@using Newtonsoft.Json

<div class="dashboard" style="min-height: 100vh">
	<NavMenu User=@user AdditionalClasses="small" />
	@if (Guild is not null)
	{
		<div class="tabbar">
			<div class="content">
				<button class="dropdown medium custom">
					@if (Guild.IconUrl is not null)
					{
						<img src=@Guild.IconUrl alt="">
					}

					<span>
						@Guild.Name
					</span>
					<span class="spacer"></span>
					<i data-feather="chevron-down"></i>
				</button>
			</div>
		</div>
	}

	<CascadingValue Value=@this Name="Layout">
		<CascadingValue Value=@user Name="CurrentUser">
			@Body
		</CascadingValue>
    </CascadingValue>
</div>

@code {
	private User user { get; set; }

	public ApiGuild Guild { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await SetUserAsync();
	}

	private async Task SetUserAsync() {
		HttpRequestMessage req = new(HttpMethod.Get, "/auth/@me");
		var result = await httpClient.SendAsync(req);

		if (result.IsSuccessStatusCode)
		{
			user = JsonConvert.DeserializeObject<User>(await result.Content.ReadAsStringAsync(), new JsonSerializerSettings()
			{
				TypeNameHandling = TypeNameHandling.All
			});
		}
	}

	public void Rerender()
	{
		StateHasChanged();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender) {
        await JavaScript.InvokeVoidAsync("renderIcons");
    }
}